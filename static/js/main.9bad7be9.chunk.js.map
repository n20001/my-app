{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["Leaflet","Icon","Default","imagePath","App","props","state","isLoaded","URI","this","intervalId","setInterval","loadData","window","fetch","then","res","json","data","setState","lat","latitude","lng","longitude","position","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","Popup","React","Component","TestPosition","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAMAA,IAAQC,KAAKC,QAAQC,UACnB,yD,IAEIC,E,kDACJ,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAEZ,EAAKC,IAAM,iDALO,E,qDAQpB,WAAsB,IAAD,OACnBC,KAAKC,WAAaC,aAAY,kBAAM,EAAKC,aAAY,KACrDH,KAAKG,a,sBAGP,WAAa,IAAD,OACVC,OACGC,MAAML,KAAKD,KACXO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OACR,EAAKC,SAAS,CACZZ,UAAU,EACVa,IAAKF,EAAKG,SACVC,IAAKJ,EAAKK,iB,oBAKlB,WACE,IAAMhB,EAAWE,KAAKH,MAAMC,SACtBiB,EAAW,CAACf,KAAKH,MAAMc,IAAKX,KAAKH,MAAMgB,KAC7C,OAAKf,EAID,qCACE,eAACkB,EAAA,EAAD,CAAcC,OAAQF,EAAUG,KAAM,EAAGC,iBAAiB,EAA1D,UACE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAQR,SAAUA,EAAlB,SACE,cAACS,EAAA,EAAD,4BAGJ,cAAC,EAAD,CAAcX,IAAKb,KAAKH,MAAMgB,IAAKF,IAAKX,KAAKH,MAAMc,SAbhD,6C,GA/BKc,IAAMC,WAkDlBC,EAAe,SAAA/B,GACnB,OACE,qCACE,8CAAOA,EAAMiB,OACb,8CAAOjB,EAAMe,WAKJhB,ICxDAiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9bad7be9.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\nimport Leaflet from 'leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\n\nLeaflet.Icon.Default.imagePath =\n  '//cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/'\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isLoaded: false\n    }\n    this.URI = 'https://api.wheretheiss.at/v1/satellites/25544'\n  }\n\n  componentDidMount () {\n    this.intervalId = setInterval(() => this.loadData(), 1000)\n    this.loadData()\n  }\n\n  loadData () {\n    window\n      .fetch(this.URI)\n      .then(res => res.json())\n      .then(data =>\n        this.setState({\n          isLoaded: true,\n          lat: data.latitude,\n          lng: data.longitude\n        })\n      )\n  }\n\n  render () {\n    const isLoaded = this.state.isLoaded\n    const position = [this.state.lat, this.state.lng]\n    if (!isLoaded) {\n      return <h1>Loading</h1>\n    } else {\n      return (\n        <>\n          <MapContainer center={position} zoom={3} scrollWheelZoom={false}>\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n            />\n            <Marker position={position}>\n              <Popup>Now here</Popup>\n            </Marker>\n          </MapContainer>\n          <TestPosition lng={this.state.lng} lat={this.state.lat} />\n        </>\n      )\n    }\n  }\n}\nconst TestPosition = props => {\n  return (\n    <>\n      <p>経度:{props.lng}</p>\n      <p>緯度:{props.lat}</p>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}